// 문제 설명
// 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.

// 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.

// 구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.

// 사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요.

// 제한사항
// 무인도에 갇힌 사람은 1명 이상 50,000명 이하입니다.
// 각 사람의 몸무게는 40kg 이상 240kg 이하입니다.
// 구명보트의 무게 제한은 40kg 이상 240kg 이하입니다.
// 구명보트의 무게 제한은 항상 사람들의 몸무게 중 최댓값보다 크게 주어지므로 사람들을 구출할 수 없는 경우는 없습니다.
// 입출력 예
// people	           limit	return
// [70, 50, 80, 50]	    100	      3
// [70, 80, 50]        	100	      3

const people = [
  [70, 50, 80, 50],
  [70, 80, 50],
];

const limit = [100, 100];

function solution(people, limit) {
  let answer = 0;
  //people배열을 sort를 활용해 오름차순으로 정렬해줍니다
  people.sort((a, b) => a - b);

  //people의 수가 있는 동안 반복문을 돕니다
  while (people.length > 0) {
    //오름차순으로 정렬해줬기 때문에 가장 마지막 요소가 몸무게가 가장 많이 나가는 사람입니다
    let heaviest = people.pop();
    //반대로 배열의 0번째 요소가 가장 가벼운 사람입니다
    let lightest = people[0];

    //만약 가장 무거운 사람와 가장 가벼운 사람의 몸무게 합이 limit보다 작거나 같으면 shift를 해줍니다
    if (heaviest + lightest <= limit) people.shift();
    //위 if에 해당하고 해당하지 않는 경우 모두 answer의 값을 1 늘려줍니다
    answer++;
  }

  return answer;
}
